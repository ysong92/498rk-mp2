{"version":3,"sources":["components/List/List.js","components/Search/Search.js","components/GalleryView/GalleryView.js","components/EventView/EventView.js","components/Gallery/Gallery.js","components/Detail/Detail.js","App.js","serviceWorker.js","index.js"],"names":["ListView","Object","entries","this","props","characters","length","constructor","react_default","a","createElement","Card","className","console","log","characters_view","results","map","character_data","idx","url","concat","thumbnail","path","extension","date","modified","substring","id","String","char","key","href","Image","src","avatar","name","Component","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","selectedOption","selectedOrder","public_key","ts","Date","now","msg","hash","require","md5","baseUrl","inputChangeHandler","bind","assertThisInitialized","clickHandler","handleOptionChange","handleOrderChange","_this2","axios","get","then","response","setState","data","catch","error","event","target","Input","onChange","placeholder","Button","onClick","type","checked","Container","List_List","GalleryView","Grid","Column","container","columns","EventView","items","info","char_id","resourceURI","character","joined","components_GalleryView_GalleryView","Gallery","filter","charlist","filterUrl","_this3","components_EventView_EventView","Detail","match","params","ex","change","description","nextHandler","prevHandler","Number","new_id","prev_id","next_id","Segment","Link","to","size","centered","BrowserRouter","basename","Switch","Route","exact","component","Search","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2daf1f44.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Label, List, Image } from 'semantic-ui-react'\nimport styles from './List.css'\n\n\nclass ListView extends Component {\n  render() {\n    // Check if the object is empty\n    const noCharacter = Object.entries(this.props.characters).length === 0\n      && this.props.characters.constructor === Object;\n\n    if (noCharacter) {\n      return (\n        <Card className=\"noCharacter\">\n          <h3>No character yet!</h3>\n        </Card>\n      )\n    } else {\n      // Iterate over the Pokemon's abilities and generate a label for each.\n      console.log(Object.entries(this.props.characters).length);\n      const characters_view = this.props.characters.results.map((character_data,idx)=>{\n          console.log(idx);\n          var url = `${character_data.thumbnail.path}.${character_data.thumbnail.extension}`;\n          var date = character_data.modified.substring(0,10);\n          var id = String(character_data.id);\n          var char = `/char/${id}`;\n          return(\n              <li className=\"w3-bar\" key={idx}>\n                  <a className=\"listrow\" href={char}>\n                  <div className=\"bar-contnet\">\n                    <Image src={url} avatar className=\"avatar\"/>\n                    <span className='character_name'>{character_data.name}</span>\n                    <div className='modified'>Last modified: {date}</div>\n                  </div>\n                  </a>\n              </li>\n            )\n        });\n\n      // Display some data about the Pokemon, and its abilities.\n      return (\n          <ul className=\"w3-ul w3-card-4\">\n            {characters_view}\n          </ul>\n        \n      )\n    }\n  }\n}\n\nListView.propTypes = {\n  count: PropTypes.number,\n  limit: PropTypes.number,\n  offset: PropTypes.number,\n  results: PropTypes.arrayOf(PropTypes.shape({\n      id:PropTypes.number,\n      name:PropTypes.string,\n      modified:PropTypes.string,\n      thumbnail:PropTypes.shape({\n        path:PropTypes.string,\n        extension: PropTypes.string\n      })\n    })),\n  total: PropTypes.number,\n}\nexport default ListView\n","import React, { Component } from 'react';\nimport {Button, List, Image, Input,  Container  } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport styles from './Search.css';\nimport ListView from '../List/List.js';\nimport 'normalize.css';\nimport axios from 'axios'\nimport PropTypes from 'prop-types';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      characters: {},\n      selectedOption:\"name\",\n      selectedOrder:\"Ascending\"\n    };\n\n    var public_key = '2f5e26fcc035d8014d57fece2897cba7';\n    var private_key = 'eaa5cfc4f3318b6176607cc731eeb694d5454718';\n    var ts = Date.now();\n    var msg = `${ts}${private_key}${public_key}`;\n    var md5 = require('md5');\n    var hash = md5(msg);\n    \n\n\n    // this.baseUrl = 'https://gateway.marvel.com/v1/public/characters?apikey=2f5e26fcc035d8014d57fece2897cba7&ts=1??&hash=nameStartsWith=';\n    this.baseUrl = `https://gateway.marvel.com/v1/public/characters?apikey=${public_key}&ts=${ts}&hash=${hash}&nameStartsWith=`;\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.handleOptionChange= this.handleOptionChange.bind(this);\n    this.handleOrderChange = this.handleOrderChange.bind(this);\n  }\n\n  clickHandler() {\n    // Form the URL\n    let url = `${this.baseUrl}${this.state.value}`;\n    if (this.state.selectedOption === \"name\"){\n      if(this.state.selectedOrder === \"Descending\"){\n        url = `${url}&orderBy=-name`;\n      }else{\n        url = `${url}&orderBy=name`;\n      }\n    }\n    if (this.state.selectedOption === \"modified\"){\n      if(this.state.selectedOrder === \"Descending\"){\n        url = `${url}&orderBy=-modified`;\n      }else{\n        url = `${url}&orderBy=modified`;\n      }\n    }\n    console.log('here');\n    console.log(url);\n    // GET some data back!\n    axios.get(url).then((response) => {\n      console.log(response);\n\n      this.setState({\n        characters: response.data.data\n      });\n\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  inputChangeHandler(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleOptionChange(event){\n    this.setState({ selectedOption: event.target.value});\n    console.log(this.state.selectedOption);\n    console.log(event.target.value);\n  }\n\n  handleOrderChange(event){\n    this.setState({ selectedOrder: event.target.value});\n  }\n\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"navbar\" id=\"navbar\">\n          <h1 className='header'>Marvel</h1>\n        </div>\n        <div className=\"menu\">\n            <a id=\"search\" href=\"/\">Search</a>\n            <a id=\"gallery\" href=\"/gallery\">Gallery</a>\n        </div>\n        <div className=\"searchbar\">\n          <Input\n            onChange={this.inputChangeHandler}\n            placeholder='Search a character here'\n            value={this.state.value}\n          />\n          <Button className='button' onClick={this.clickHandler}> Search </Button>\n        </div>\n\n        <div className='radiodiv'>\n          <form>\n              <span className=\"radioinput\">\n                <label><input\n                  type=\"radio\"\n                  value=\"name\"\n                  className=\"form-check-input\"\n                  checked={this.state.selectedOption === \"name\"}\n                  onChange={this.handleOptionChange}\n                  />\n                  Name\n                </label>\n              </span>\n\n              <span className=\"radioinput\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"modified\"\n                    className=\"form-check-input\"\n                    checked={this.state.selectedOption === \"modified\"}\n                    onChange={this.handleOptionChange}\n                  />\n                  Last Modified\n                </label>\n              </span>\n            </form>\n\n            <form>\n              <span className=\"radioinput\">\n                <label><input\n                  type=\"radio\"\n                  value=\"Ascending\"\n                  className=\"form-check-input\"\n                  checked={this.state.selectedOrder === \"Ascending\"}\n                  onChange={this.handleOrderChange}\n                  />\n                  Ascending\n                </label>\n              </span>\n\n              <span className=\"radioinput\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"Descending\"\n                    className=\"form-check-input\"\n                    checked={this.state.selectedOrder === \"Descending\"}\n                    onChange={this.handleOrderChange}\n                  />\n                  Descending\n                </label>\n              </span>\n            </form>\n        </div>\n\n        <div>\n          <Container className='listContainer'>\n              <ListView characters={this.state.characters} />\n          </Container>\n        </div>\n      \n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Image, Card} from 'semantic-ui-react'\nimport styles from './GalleryView.scss'\n\n\nclass GalleryView extends Component {\n  render() {\n    // Check if the object is empty\n    const noCharacter = Object.entries(this.props.characters).length === 0\n      && this.props.characters.constructor === Object;\n\n    if (noCharacter) {\n      return (\n        <Card className=\"noCharacter\">\n          <h3>No character yet!</h3>\n        </Card>\n      )\n    } else {\n      // Iterate over the Pokemon's abilities and generate a label for each.\n      const characters_view = this.props.characters.results.map((character_data,idx)=>{\n          // console.log(idx);\n          var url = `${character_data.thumbnail.path}.${character_data.thumbnail.extension}`;\n          var date = character_data.modified.substring(0,10);\n          var id = character_data.id;\n          var char = `/char/${id}`;\n          return(\n\n              <Grid.Column key={idx}>\n               <a href={char}>\n                <div>\n                  <Card className=\"noCharacter\">\n                    <Image src={url} />\n                  </Card>\n                </div>\n                </a>\n                  \n              </Grid.Column>\n            )\n        });\n\n      // Display some data about the Pokemon, and its abilities.\n      return (\n          <Grid container columns={3}>\n            {characters_view}\n          </Grid>\n        \n      )\n    }\n  }\n}\n\nGalleryView.propTypes = {\n  // count: PropTypes.number,\n  // limit: PropTypes.number,\n  // offset: PropTypes.number,\n  results: PropTypes.arrayOf(PropTypes.shape({\n      id:PropTypes.number,\n      name:PropTypes.string,\n      modified:PropTypes.string,\n      thumbnail:PropTypes.shape({\n        path:PropTypes.string,\n        extension: PropTypes.string\n      })\n    })),\n  // total: PropTypes.number,\n}\nexport default GalleryView\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Image, Card, Container} from 'semantic-ui-react'\nimport styles from './EventView.css'\nimport axios from 'axios'\nimport GalleryView from '../GalleryView/GalleryView.js'\n\n\nclass EventView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      characters: [],\n      results:{}\n    };\n    console.log(\"in EventView\");\n    this.public_key = '2f5e26fcc035d8014d57fece2897cba7';\n    var private_key = 'eaa5cfc4f3318b6176607cc731eeb694d5454718';\n    this.ts = Date.now();\n    var msg = `${this.ts}${private_key}${this.public_key}`;\n    var md5 = require('md5');\n    this.hash = md5(msg);\n    \n    this.baseUrl = 'https://gateway.marvel.com:443/v1/public/characters/';\n\n    // GET some data back!\n    this.props.characters.items.map((info,idx)=>{\n          var char_id = info.resourceURI.substring(info.resourceURI.length-7,info.resourceURI.length);\n          var url = `${this.baseUrl}${char_id}?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}`;\n          \n          // GET some data back!\n          axios.get(url).then((response) => {\n            \n            return response.data.data.results[0];\n          }).then((character)=>{\n              var joined = this.state.characters.concat(character);\n              this.setState({characters:joined});\n          }).then((response)=>{\n              // console.log(this.state.characters);\n          }).then((response)=>{\n              this.setState({results:{results:this.state.characters}});\n              // console.log(this.state.results);\n\n          }).catch((error) => {\n            console.log(error);\n          });\n        });\n    }\n\n  render() {\n    console.log(\"in event\");\n        // console.log(this.state.results);\n\n      // Display some data about the Pokemon, and its abilities.\n      return (\n\n          <Container className='galleryContainer'>\n            <GalleryView characters={this.state.results} />\n          </Container>\n        \n      )\n  }\n  \n}\n\nEventView.propTypes = {\n  available: PropTypes.number,\n  collectionURI: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n      resourceURI:PropTypes.string,\n      name:PropTypes.string,\n    })),\n}\nexport default EventView\n","import React, { Component } from 'react';\nimport {Button, List, Image, Input,  Container  } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport styles from './Gallery.scss';\nimport 'normalize.css';\nimport axios from 'axios'\nimport PropTypes from 'prop-types';\nimport GalleryView from '../GalleryView/GalleryView.js'\nimport EventView from '../EventView/EventView.js'\n\n\nclass Gallery extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      characters: {},\n      filter: '',\n      charlist:{}\n    };\n\n    this.public_key = '2f5e26fcc035d8014d57fece2897cba7';\n    var private_key = 'eaa5cfc4f3318b6176607cc731eeb694d5454718';\n    this.ts = Date.now();\n    var msg = `${this.ts}${private_key}${this.public_key}`;\n    var md5 = require('md5');\n    this.hash = md5(msg);\n    \n\n    this.filterUrl = 'https://gateway.marvel.com:443/v1/public/events/';\n    this.baseUrl = `https://gateway.marvel.com/v1/public/characters?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}&orderBy=-modified&limit=50`;\n    // GET some data back!\n    axios.get(this.baseUrl).then((response) => {\n      this.setState({\n        characters: response.data.data,\n        charlist:{}\n      });\n\n    }).catch((error) => {\n      console.log(error);\n    });\n    // this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    // this.handleOptionChange= this.handleOptionChange.bind(this);\n    // this.handleOrderChange = this.handleOrderChange.bind(this);\n  }\n\n  clickHandler(id) {\n    // Form the URL\n    this.setState({filter: \"\"});\n    let url = `${this.filterUrl}${id}?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}`;\n    console.log('clicked');\n    console.log(id);\n    // GET some data back!\n    axios.get(url).then((response) => {\n      \tthis.setState({charlist: response.data.data.results[0].characters});\n      \tthis.setState({filter: id});\n      \tthis.setState({characters:{}});\n    }).catch((error) => {\n       console.log(error);\n    });\n    \n}\n\n  render() {\n  \tif (this.state.filter===''){\n      console.log(this.state.characters);\n  \t\treturn (\n     \t <div>\n     \t   <div className=\"navbar\" id=\"navbar\">\n     \t     <h1 className='header'>Marvel</h1>\n     \t   </div>\n     \t   <div className=\"menu\">\n     \t       <a id=\"search\" href=\"/\">Search</a>\n     \t       <a id=\"gallery\" href=\"/gallery\">Gallery</a>\n     \t   </div>\n     \t   <div className=\"filter\">\n     \t   \t<span className=\"selectevent\">Select an event:</span>\n     \t       <a value='315' onClick={() => this.clickHandler('315')}> Infinity </a>\n     \t       <a value='333' onClick={() => this.clickHandler('333')}> Monsters Unleashed </a>\n     \t       <a value='266' onClick={() => this.clickHandler('266')}> Other - Evolve or Die </a>\n     \t       <a value='336' onClick={() => this.clickHandler('336')}> Secret Empire </a>\n     \t       <a value='60'  onClick={() => this.clickHandler('60')}> World War Hulks </a>\n     \t       <a value=\"234\" onClick={() => this.clickHandler('234')}> Avengers Disassembled </a>\n     \t   </div>\n     \t   <div>\n     \t     <Container className='galleryContainer'>\n     \t         <GalleryView characters={this.state.characters} />\n     \t     </Container>\n     \t   </div>\n     \t </div>\n    \t);\n  \t}\n\n  \telse{\n      console.log(\"change event\");\n      // console.log(this.state.charlist);\n  \t\treturn (\n  \t\t\t<div>\n     \t\t   <div className=\"navbar\" id=\"navbar\">\n     \t\t     <h1 className='header'>Marvel</h1>\n     \t\t   </div>\n     \t\t   <div className=\"menu\">\n     \t\t       <a id=\"search\" href=\"/\">Search</a>\n     \t\t       <a id=\"gallery\" href=\"/gallery\">Gallery</a>\n     \t\t   </div>\n     \t \t\n     \t \t\t<div className=\"filter\">\n     \t   \t\t<span className=\"selectevent\">Select an event:</span>\n     \t   \t\t   <a value='315' onClick={() => this.clickHandler('315')}> Infinity </a>\n     \t       \t   <a value='333' onClick={() => this.clickHandler('333')}> Monsters Unleashed </a>\n     \t       \t   <a value='266' onClick={() => this.clickHandler('266')}> Other - Evolve or Die </a>\n     \t       \t   <a value='336' onClick={() => this.clickHandler('336')}> Secret Empire </a>\n     \t       \t   <a value='60'  onClick={() => this.clickHandler('60')}> World War Hulks </a>\n     \t       \t   <a value=\"234\" onClick={() => this.clickHandler('234')}> Avengers Disassembled </a>\n     \t   \t\t</div>\n     \t   \t\t<Container className='galleryContainer'>\n     \t         <EventView characters={this.state.charlist} />\n     \t     </Container>\n     \t   </div>\n  \t\t)\n  \t}\n    \n  }\n}\n\nexport default Gallery","import React, { Component } from 'react';\nimport {Button, List, Image, Input,  Container, Segment} from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport 'normalize.css';\nimport axios from 'axios'\nimport PropTypes from 'prop-types';\nimport styles from './Detail.scss';\nimport { Redirect } from 'react-router'\nimport { withRouter } from 'react-router'\n\n\nclass Detail extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t      characters: {},\n\t      id:this.props.match.params.id,\n\t      path:\" \",\n\t      ex:\" \",\n\t      url:' ',\n          change:this.props.match.params.id,\n          description:'',\n          error:false,\n\t    };\n\t\n\t    this.public_key = '2f5e26fcc035d8014d57fece2897cba7';\n    \tvar private_key = 'eaa5cfc4f3318b6176607cc731eeb694d5454718';\n    \tthis.ts = Date.now();\n    \tvar msg = `${this.ts}${private_key}${this.public_key}`;\n    \tvar md5 = require('md5');\n    \tthis.hash = md5(msg);\n\n    \tthis.baseUrl = 'https://gateway.marvel.com:443/v1/public/characters/';\n    \tvar url = `${this.baseUrl}${this.state.id}?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}`;\n\n    \tthis.nextHandler = this.nextHandler.bind(this);\n    \tthis.prevHandler = this.prevHandler.bind(this);\n    \t  \n    \t// GET some data back!\n    \taxios.get(url).then((response) => {\n    \t\tconsole.log(this.state.id);\n    \t   \tthis.setState({characters:response.data.data.results[0]});\n    \t   \tthis.setState({path:response.data.data.results[0].thumbnail.path});\n    \t   \tthis.setState({\n                ex:response.data.data.results[0].thumbnail.extension,\n                description: response.data.data.results[0].description\n            });\n    \t   \tvar url = `${this.state.path}.${this.state.ex}`;\n    \t   \tthis.setState({url:url});\n    \t   \tconsole.log(url);\n    \t}).catch((error) => {\n    \t    console.log(error);\n            console.log(\"invalid id\");\n            var new_id = String(Number(this.state.id)+1);\n            this.setState({error:true});\n\n            // this.props.router.push(/char/+new_id);\n            // this.nextHandler();\n\n\n    \t});\n    \t\n    }\n\n\tnextHandler() {\n\t\tconsole.log(\"next\");\n\t\tvar new_id = String(Number(this.state.id)+1);\n        this.setState({\n            id:new_id,\n            error: false\n        });\n        var url = `${this.baseUrl}${new_id}?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}`;\n\n        // GET some data back!\n        axios.get(url).then((response) => {\n            console.log(response.data.data.results[0]);\n            this.setState({characters:response.data.data.results[0]});\n            this.setState({path:response.data.data.results[0].thumbnail.path});\n            this.setState({\n                ex:response.data.data.results[0].thumbnail.extension,\n                description: response.data.data.results[0].description\n            });\n            var url = `${this.state.path}.${this.state.ex}`;\n            console.log(url);\n            this.setState({url:url, change:this.state.id});\n\n        }).catch((error) => {\n            console.log(\"invalid id\");\n            console.log(error);\n            this.setState({error:true});\n        });\n\n\t}\n\n\tprevHandler() {\n        console.log(\"prev clicked\");\n\n\t\tvar new_id = String(Number(this.state.id)-1);\n        this.setState({\n            id:new_id,\n            error: false\n\n        });\n        var url = `${this.baseUrl}${new_id}?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}`;\n\n        // GET some data back!\n        axios.get(url).then((response) => {\n            console.log(response.data.data.results[0]);\n            this.setState({characters:response.data.data.results[0]});\n            this.setState({path:response.data.data.results[0].thumbnail.path});\n            this.setState({\n                ex:response.data.data.results[0].thumbnail.extension,\n                description: response.data.data.results[0].description\n            });\n            var url = `${this.state.path}.${this.state.ex}`;\n            this.setState({url:url, change:this.state.id});\n\n            console.log(url);\n\n        }).catch((error) => {\n            console.log(\"invalid id\");\n            console.log(error);\n            this.setState({error:true});\n        });\n\t}\n\n\trender() {\n\t\t// var url = `${this.state.characters.thumbnail.path}.${this.state.characters.thumbnail.extension}`;\n        var prev_id = String(Number(this.state.id)-1);\n        var next_id = String(Number(this.state.id)+1);\n        var cur_id = this.state.id;\n        console.log(\"render  \"+this.props.match.params.id);\n        if (this.state.error === true){\n            return (\n                <div>\n                    <div className=\"navbar\" id=\"navbar\">\n                        <h1 className='header'>Marvel</h1>\n                    </div>\n                    <div className=\"menu\">\n                        <a id=\"search\" href=\"/\">Search</a>\n                        <a id=\"gallery\" href=\"/gallery\">Gallery</a>\n                    </div>\n                    <Segment className=\"char-card\">\n                        <Link to={'/char/'+ prev_id} onClick={this.prevHandler}><span className=\"prev\" id=\"prev\">&#10094;</span></Link>\n                        <Link to={'/char/'+ next_id} onClick={this.nextHandler}><span className=\"next\" id=\"next\">&#10095;</span></Link>\n                        <h1>Invalid character ID, please click next or prev.</h1>\n                    </Segment>\n                    \n                </div>\n            );\n\n        }\n        else if (this.state.id === this.state.change){\n            return (\n                <div>\n                    <div className=\"navbar\" id=\"navbar\">\n                        <h1 className='header'>Marvel</h1>\n                    </div>\n                    <div className=\"menu\">\n                        <a id=\"search\" href=\"/\">Search</a>\n                        <a id=\"gallery\" href=\"/gallery\">Gallery</a>\n                    </div>\n                    <Segment className=\"char-card\">\n                        <Image src={this.state.url} size='medium' centered />\n                        <Link to={'/char/'+ prev_id} onClick={this.prevHandler}><span className=\"prev\" id=\"prev\">&#10094;</span></Link>\n                        <Link to={'/char/'+ next_id} onClick={this.nextHandler}><span className=\"next\" id=\"next\">&#10095;</span></Link>\n                        <h1>{this.state.characters.name}</h1>\n                        <h5>ID: {this.state.id}</h5>\n                        <h5>Description: {this.state.description}</h5>\n                    </Segment>\n                    \n                </div>\n            );\n        }\n        else{\n            return (\n                <div>\n                    <div className=\"navbar\" id=\"navbar\">\n                        <h1 className='header'>Marvel</h1>\n                    </div>\n                    <div className=\"menu\">\n                        <a id=\"search\" href=\"/\">Search</a>\n                        <a id=\"gallery\" href=\"/gallery\">Gallery</a>\n                    </div>\n                    <Segment className=\"char-card\">\n                        <Link to={'/char/'+ prev_id} onClick={this.prevHandler}><span className=\"prev\" id=\"prev\">&#10094;</span></Link>\n                        <Link to={'/char/'+ next_id} onClick={this.nextHandler}><span className=\"next\" id=\"next\">&#10095;</span></Link>\n                        <h1>Loading</h1>\n                    </Segment>\n                    \n                </div>\n            );\n\n        }\n    \t\n  \t}\n}\n\n\nexport default Detail","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css';\n\n// Include your new Components here\nimport Search from './components/Search/Search.js';\nimport Gallery from  './components/Gallery/Gallery.js';\nimport Detail from './components/Detail/Detail.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/498rk-mp2\">\n        <Switch>\n          <Route exact path=\"/\" component={Search}/>\n          <Route exact path=\"/gallery\" component={Gallery}/>\n          <Route exact path=\"/char/:id\" component={Detail}/>\n\n          {/*\n            Add routes for new pages here!\n            Here's an example. To view this route, just go to http://localhost:3000/example\n          */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}